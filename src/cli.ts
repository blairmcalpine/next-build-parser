#!/usr/bin/env node

import fs from 'node:fs';
import { Option, program } from 'commander';
import { defaultSizeUnit, sizeUnits } from './unit.js';
import { parseFile } from './parseFile.js';

const unitOption = new Option(
  '-u, --unit <unit>',
  'The unit to use for the output.',
)
  .choices(sizeUnits)
  .default(defaultSizeUnit);

program
  .name('next-build-parser')
  .description('Parse the output of next build into machine readable JSON.')
  .argument(
    '<build-file>',
    'The path to the Next.js build file. This can be generated by running `next build > build-file`',
  )
  .option(
    '-o, --output <output-file>',
    'The path to the output file. If not specified, the output will be written to stdout.',
  )
  .addOption(unitOption);

export const cli = (argv: string[]) => {
  program.parse(argv);
  const { output, unit } = program.opts();
  const [inputFile] = program.args;
  const result = parseFile(inputFile!, { unit });
  if (output) {
    fs.writeFileSync(output, JSON.stringify(result, null, 2));
  } else {
    console.log(result);
  }
};

if (process.env.NODE_ENV !== 'test') {
  cli(process.argv);
}
